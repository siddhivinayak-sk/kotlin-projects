# Guava                     # Not working (per second limitation)# SimpleRateLimiter         # Working (with Semaphore)resilience4j:  enabled: false            # Not workingresilience4j-manual:  enabled: false            # Not workingmybucket4j:  nocache:    enabled: false          # Working  manual:    enabled: false          # Not Working  caffine:    enabled: false          # Working  ehcache:    enabled: false          # Working  jedis:    enabled: false          # Not Working  rateLimits:    - capacity: 10      time: 1      unit: minutescustom-jedis:               # Working (with single limit config compare to Bucket4j)  enabled: true  rateLimits:    - capacity: 15      time: 60      unit: seconds      fillType: 0      requestedToken: 1#    - capacity: 5#      time: 1#      unit: seconds#      fillType: 0#      requestedToken: 1spring:#  cache:#    type: jcache#    jcache:#      provider: com.hazelcast.cache.impl.HazelcastServerCachingProvider#      config: classpath:hazelcast.xml  cache:    jcache:      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider    cache-names:    - buckets    caffeine:      spec: maximumSize=1000000,expireAfterAccess=3600smanagement:
  endpoints:
    web:
      exposure:
        include: "*"
  security:    enabled: falsebucket4j:  enabled: true  default-tags:  - expression: "1"     key: xx  filters:  - cache-name: buckets
#    filter-method: gateway#    filter-order: -100000#    metrics:
#      types:
#      - consumed-counter
#      - rejected-counter#      tags:#      - key: xx#        expression: "2"    url: .*
    rate-limits:
    - bandwidths:
      - capacity: 1        refill-capacity: 1
        time: 1
        unit: seconds        initial-capacity: 0        refill-speed: interval        ratelimiter:  instances:    basic:      limitForPeriod: 15      limitRefreshPeriod: 1m      timeoutDuration: 1s      debug: true
